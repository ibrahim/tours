-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Tour.Mutation exposing (DeleteEventRequiredArguments, SaveEventRequiredArguments, SaveSectionRequiredArguments, SaveTripRequiredArguments, deleteEvent, saveEvent, saveSection, saveTrip)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import Tour.InputObject
import Tour.Interface
import Tour.Object
import Tour.Scalar
import Tour.ScalarCodecs
import Tour.Union


type alias DeleteEventRequiredArguments =
    { input : Tour.InputObject.DeleteEventInput }


deleteEvent : DeleteEventRequiredArguments -> SelectionSet decodesTo Tour.Object.DeleteEventPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteEvent requiredArgs object_ =
    Object.selectionForCompositeField "deleteEvent" [ Argument.required "input" requiredArgs.input Tour.InputObject.encodeDeleteEventInput ] object_ (identity >> Decode.nullable)


type alias SaveEventRequiredArguments =
    { input : Tour.InputObject.SaveEventInput }


saveEvent : SaveEventRequiredArguments -> SelectionSet decodesTo Tour.Object.SaveEventPayload -> SelectionSet (Maybe decodesTo) RootMutation
saveEvent requiredArgs object_ =
    Object.selectionForCompositeField "saveEvent" [ Argument.required "input" requiredArgs.input Tour.InputObject.encodeSaveEventInput ] object_ (identity >> Decode.nullable)


type alias SaveSectionRequiredArguments =
    { input : Tour.InputObject.SaveSectionInput }


saveSection : SaveSectionRequiredArguments -> SelectionSet decodesTo Tour.Object.SaveSectionPayload -> SelectionSet (Maybe decodesTo) RootMutation
saveSection requiredArgs object_ =
    Object.selectionForCompositeField "saveSection" [ Argument.required "input" requiredArgs.input Tour.InputObject.encodeSaveSectionInput ] object_ (identity >> Decode.nullable)


type alias SaveTripRequiredArguments =
    { input : Tour.InputObject.SaveTripInput }


saveTrip : SaveTripRequiredArguments -> SelectionSet decodesTo Tour.Object.SaveTripPayload -> SelectionSet (Maybe decodesTo) RootMutation
saveTrip requiredArgs object_ =
    Object.selectionForCompositeField "saveTrip" [ Argument.required "input" requiredArgs.input Tour.InputObject.encodeSaveTripInput ] object_ (identity >> Decode.nullable)
