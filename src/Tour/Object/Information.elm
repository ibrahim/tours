-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Tour.Object.Information exposing (day, info_type, notes, section_id, snippets, title, type_, uuid)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Tour.InputObject
import Tour.Interface
import Tour.Object
import Tour.Scalar
import Tour.ScalarCodecs
import Tour.Union


type_ : SelectionSet String Tour.Object.Information
type_ =
    Object.selectionForField "String" "_type" [] Decode.string


day : SelectionSet (Maybe Int) Tour.Object.Information
day =
    Object.selectionForField "(Maybe Int)" "day" [] (Decode.int |> Decode.nullable)


info_type : SelectionSet (Maybe String) Tour.Object.Information
info_type =
    Object.selectionForField "(Maybe String)" "info_type" [] (Decode.string |> Decode.nullable)


notes : SelectionSet (Maybe String) Tour.Object.Information
notes =
    Object.selectionForField "(Maybe String)" "notes" [] (Decode.string |> Decode.nullable)


section_id : SelectionSet String Tour.Object.Information
section_id =
    Object.selectionForField "String" "section_id" [] Decode.string


snippets : SelectionSet decodesTo Tour.Union.Snippet -> SelectionSet (Maybe (List (Maybe decodesTo))) Tour.Object.Information
snippets object_ =
    Object.selectionForCompositeField "snippets" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


title : SelectionSet (Maybe String) Tour.Object.Information
title =
    Object.selectionForField "(Maybe String)" "title" [] (Decode.string |> Decode.nullable)


uuid : SelectionSet String Tour.Object.Information
uuid =
    Object.selectionForField "String" "uuid" [] Decode.string
